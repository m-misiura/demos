---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hap-detector-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-rbac-proxy-role
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hap-detector-kube-rbac-proxy-binding
subjects:
- kind: ServiceAccount
  name: hap-detector-sa
namespace: CHANGEME_TO_YOUR_NAMESPACE
roleRef:
  kind: ClusterRole
  name: kube-rbac-proxy-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hap-detector-reader
rules:
- apiGroups: [""]
  resources: ["services"]
  resourceNames: ["hap-detector-proxy-service"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-hap-detector
subjects:
- kind: User
  name: "CHANGEME_TO_YOUR_USERNAME" 
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: hap-detector-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-rbac-proxy-config
data:
  config.yaml: |
    authorization:
      resourceAttributes:
        verb: "get"
        resource: "services"
        apiGroup: ""
        resourceName: "hap-detector-proxy-service"
---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  name: guardrails-detector-runtime-hap
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  serviceAccountName: hap-detector-sa
  supportedModelFormats:
    - autoSelect: true
      name: guardrails-detector-huggingface
  containers:
    - name: kserve-container
      image: quay.io/rh-ee-mmisiura/hf-detector:latest
      command: ["uvicorn", "app:app"]
      args:
        - "--workers=4"
        - "--host=0.0.0.0"
        - "--port=8000"
        - "--log-config=/common/log_conf.yaml"
      env:
        - name: MODEL_DIR
          value: /mnt/models
        - name: HF_HOME
          value: /tmp/hf_home
      ports:
        - containerPort: 8000
    
    - name: kube-rbac-proxy
      image: quay.io/brancz/kube-rbac-proxy:v0.15.0
      args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8000/"
        - "--config-file=/etc/kube-rbac-proxy/config.yaml"
        - "--tls-cert-file=/etc/tls/private/tls.crt"
        - "--tls-private-key-file=/etc/tls/private/tls.key"
        - "--v=0"
        - "--proxy-endpoints-port=9443"
      ports:
        - name: https
          containerPort: 8443
        - name: proxy-healthz
          containerPort: 9443
      volumeMounts:
        - name: config
          mountPath: /etc/kube-rbac-proxy
          readOnly: true
        - name: tls-certs
          mountPath: /etc/tls/private
          readOnly: true
      readinessProbe:
        httpGet:
          path: /healthz
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 2
        periodSeconds: 5
  
  volumes:
    - name: config
      configMap:
        name: kube-rbac-proxy-config
    - name: tls-certs
      secret:
        secretName: hap-detector-tls
---
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  name: ibm-hap-38m-detector
  labels:
    opendatahub.io/dashboard: 'true'
    trustyai/guardrails: 'true'
  annotations:
    serving.kserve.io/deploymentMode: RawDeployment
    security.opendatahub.io/enable-auth: 'false'
spec:
  predictor:
    serviceAccountName: hap-detector-sa
    automountServiceAccountToken: true
    model:
      modelFormat:
        name: guardrails-detector-huggingface
      runtime: guardrails-detector-runtime-hap
      storage:
        key: aws-connection-minio-data-connection-detector-models
        path: granite-guardian-hap-38m
      resources:
        limits:
          cpu: '1'
          memory: 2Gi
          nvidia.com/gpu: '1'
        requests:
          cpu: '1'
          memory: 2Gi
          nvidia.com/gpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  name: hap-detector-proxy-service
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: hap-detector-tls 
spec:
  selector:
    app: isvc.ibm-hap-38m-detector-predictor
  ports:
  - name: https
    port: 8443
    targetPort: 8443
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: hap-detector-route
spec:
  to:
    kind: Service
    name: hap-detector-proxy-service
  port:
    targetPort: https
  tls:
    termination: reencrypt  
    insecureEdgeTerminationPolicy: Redirect
